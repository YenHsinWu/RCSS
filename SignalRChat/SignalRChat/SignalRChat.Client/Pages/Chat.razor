@page "/chat"
@using Microsoft.AspNetCore.SignalR.Client;
@rendermode InteractiveWebAssembly
@inject NavigationManager Navigation

<PageTitle>Chat Room</PageTitle>

<input type="text" @bind="@userName" placeholder="Username" />
<button @onclick="JoinGroup">Join</button>
<br />
<input type="text" @bind="@message" placeholder="Message" />
<br />
<button @onclick="SendMessage">Send</button>
<br />

<ul>
    @foreach(var msg in @messages)
    {
        <li>@msg</li>
    }
</ul>

@code {
    private HubConnection? hubConnection;
    private List<string> messages = [];
    private string? groupName = "Service101";
    private string? userName;
    public string? message;

    protected async override Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder().WithUrl(Navigation.ToAbsoluteUri("/chathub")).Build();

        hubConnection.On<string, string, string>("SendGroupMsg", (groupName, userName, message) =>
        {
            var concatMessage = $"[{groupName}] --- {userName}: {message}";
            messages.Add(concatMessage);
            InvokeAsync(StateHasChanged);
        });

        hubConnection.StartAsync();
        Console.WriteLine(hubConnection.State);
    }

    private async Task JoinGroup()
    {
        await hubConnection.SendAsync("JoinGroup", groupName, userName);
    }

    private async Task SendMessage()
    {
        await hubConnection!.SendAsync("SendMessageToGroup", groupName, userName, message);
    }

    private async Task ReceiveMessage()
    {
        await hubConnection!.SendAsync("ReceiveMessageFromGroup", groupName, userName, message);
    }
}
