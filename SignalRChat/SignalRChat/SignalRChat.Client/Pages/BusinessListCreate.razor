@page "/BusinessListCreate"
@rendermode InteractiveWebAssembly
@using FluentValidation.Results
@using SignalRChat.Client.Service
@using SignalRChat.Client.Model
@* @using SignalRChat.Client.Validator *@
@* @using Blazored.FluentValidation *@
@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime
@inject SignalRChat.Client.Service.BusinessService ObjectBusinessService
@inject BusinessListService ObjectBusinessListService

<PageTitle>商家新增</PageTitle>
<h3>商家新增</h3>
<EditForm Model="@businessListCreateModel" OnValidSubmit="@AddBusinessListAsync">
    <DataAnnotationsValidator @ref="dataAnnotationsValidator" />
    <ValidationSummary />
    <label for="business_type_id">商家類型(id)</label>
    <select @bind="businessListCreateModel.business_type_id">
        @if (dataBusinessType != null)
        {
            @foreach (var dBT in dataBusinessType)
            {
                <option value="@dBT.business_type_id">@dBT.business_type_name</option>
            }
        }
    </select><br/>
    <label for="business_name">商家名稱</label>
    <input id="business_name"
    type="text"
    class="form-control"
    @bind="businessListCreateModel.business_name" />
    <label for="email">商家email</label>
    <input id="email"
    type="text"
    class="form-control"
    @bind="businessListCreateModel.email" />
    <label for="address">商家地址</label>
    <input id="address"
    type="text"
    class="form-control"
    @bind="businessListCreateModel.address" />
    <label for="phone">商家電話</label>
    <input id="phone"
    type="text"
    class="form-control"
    @bind="businessListCreateModel.phone" />
    <label for="business_url">商家網址</label>
    <input id="business_url"
    type="text"
    class="form-control"
    @bind="businessListCreateModel.business_url" />
    <Alert Color="AlertColor.Warning" Class="@isHide" Dismissable="true">@errorMessage </Alert>
    <button class="btn btn-outline-primary" type="submit">
        新增
    </button>
    <button class="btn btn-outline-secondary"
    @onclick="@CancelBusinessListAsync">
        取消
    </button>
</EditForm>
@* <div class="filters">
    <label for="business_type_id">商家類型(id)</label>
    <select @bind="businessListCreateModel.business_type_id">
        @if (dataBusinessType != null)
        {
            @foreach (var dBT in dataBusinessType)
            {
                <option value="@dBT.business_type_id">@dBT.business_type_name</option>
            }
        }
    </select><br />
    <label for="business_name">商家名稱</label>
    <input id="business_name"
           type="text"
           class="form-control"
           @bind="businessListCreateModel.business_name" />
    <label for="email">商家email</label>
    <input id="email"
           type="text"
           class="form-control"
           @bind="businessListCreateModel.email" />
    <label for="address">商家地址</label>
    <input id="address"
           type="text"
           class="form-control"
           @bind="address" />
    <label for="phone">商家電話</label>
    <input id="phone"
           type="text"
           class="form-control"
           @bind="businessListCreateModel.phone" />
    <label for="business_url">商家網址</label>
    <input id="business_url"
           type="text"
           class="form-control"
           @bind="businessListCreateModel.business_url" />
    <Alert Color="AlertColor.Warning" Class="@isHide" Dismissable="true">@errorMessage </Alert>
    <button class="btn btn-outline-primary"
            @onclick="@AddBusinessListAsync">
        新增
    </button>
    <button class="btn btn-outline-secondary"
            @onclick="@CancelBusinessListAsync">
        取消
    </button>
</div> *@
@code {
    private BusinessListCreateModel businessListCreateModel=new BusinessListCreateModel();
    private DataAnnotationsValidator dataAnnotationsValidator = new DataAnnotationsValidator();
    private EditContext? CurrentEditContext { get; set; }
    private int business_type_id = 0;
    private string business_name = "";
    private string email = "";
    private string phone = "";
    private string address = "";
    private string business_url = "";
    private string errorMessage = "";
    private string isHide = "d-none";
    private List<DataBusinessType>? dataBusinessType;    

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                await InitializeAsync();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"錯誤: {ex.Message}");
            }
        }
    }
    private async Task InitializeAsync()
    {        
        dataBusinessType= await ObjectBusinessListService.GetBusinessType();
        businessListCreateModel.business_type_id = 1;
        businessListCreateModel.business_name = "";
        businessListCreateModel.email = "";
        businessListCreateModel.phone = "";
        businessListCreateModel.address = "";
        businessListCreateModel.business_url = "";
        isHide = "d-none";
        StateHasChanged();
    }

    private void SubmitValidForm()
    {

    }

    private async void AddBusinessListAsync()
    {
        ResponseStanderd req = await ObjectBusinessListService.PostBusinessList(businessListCreateModel.address, businessListCreateModel.phone, businessListCreateModel.email, businessListCreateModel.business_name, businessListCreateModel.business_type_id, 0, businessListCreateModel.business_url);
        errorMessage = req.message;
        isHide = "";
        StateHasChanged();
        await Task.Delay(6000);
        isHide = "d-none";
        StateHasChanged();
    }
    private void HandleValidSubmit()
    {
        Console.WriteLine("validate");
    }
    private async void CancelBusinessListAsync()
    {
        await JSRuntime.InvokeVoidAsync("history.back");
    }
}
